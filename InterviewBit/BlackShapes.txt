void dfs(vector<string> &a, int i, int j, int n, int m, vector<vector<int>> &v)
{
    if(v[i][j]==0)
    return;
    v[i][j]=0;
    vector<int> dx = {1, 0, -1, 0};
    vector<int> dy = {0, 1, 0, -1};
    for(int q=0;q<4;q++)
    {
        int x = i + dx[q];
        int y = j + dy[q];
        if(x >= 0 && y >= 0 && x < n && y < m && a[x][y] == 'X' && v[x][y] == -1)
        {
            //v[x][y] = 0;
            dfs(a, x, y, n, m, v);
        }
    }
    return ;
}
int Solution::black(vector<string> &a) {
    int n = a.size();
    int m = a[0].size();
    vector<vector<int> > v(n, vector<int> (m, -1));
    int count = 0;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(a[i][j] == 'X' && v[i][j]==-1)
            {
                dfs(a, i, j, n, m, v);
                count++;
            }
        }
    }
     return count;   

}
