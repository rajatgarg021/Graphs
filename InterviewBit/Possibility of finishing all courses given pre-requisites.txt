int Solution::solve(int a, vector<int> &b, vector<int> &c) {
    vector<vector<int> > neigh(a+1);
    vector<int > incom(a+1);
    for(int i=0;i<b.size();i++)
    {
        neigh[b[i]].push_back(c[i]);
        incom[c[i]]++;
    }
    queue<int> q;
    for(int i=1;i<=a;i++)
    {
        if(incom[i] == 0)
        {
            q.push(i);
        }
    }
    int count = 0;
    while(!q.empty())
    {
        int top = q.front();
        q.pop();
        count++;
        for(int i=0;i < neigh[top].size();i++)
        {
            incom[neigh[top][i]]--;
            if(incom[neigh[top][i]] == 0)
            {
                q.push(neigh[top][i]);
            }
        }
    }
    if(count == a)
    {
        return 1;
    }
    return 0;
}
