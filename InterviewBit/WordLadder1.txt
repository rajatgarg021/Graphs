int Solution::ladderLength(string start, string end, vector<string> &dict) {
    dict.push_back(end);
    int n = dict.size();
    queue<pair<string, int> >pq;
    pq.push({start, 0});
    vector<int> visited(n, 0);
    while(!pq.empty())
    {
        pair<string, int> p = pq.front();
        pq.pop();
        
        string s = p.first;
        int ans = p.second;
        if(s == end)
        {
            return ans+1;
        }
        for(int i=0;i<n;i++)
        {
            if(visited[i] == 0)
            {
                int diff = 0;
                for(int j=0;j<s.length();j++)
                {
                    if(s[j] !=  dict[i][j])
                    {
                        diff++;
                    }
                    if(diff > 1)
                    {
                        break;
                    }
                    
                }   
                if(diff == 1)
                {
                    visited[i] = 1;
                
                    pq.push({dict[i], p.second+1});
                }
                
            }
            
        }
    }
    return 0;
}
